---
import Layout from '../layouts/Layout.astro';
import LoadingTransition from '../components/LoadingTransition.astro';
---

<Layout title="TellMe - Inicio">
  <LoadingTransition />
  <main class="min-h-screen w-full bg-gradient-to-br from-purple-100 via-pink-50 to-indigo-100">
    <div class="w-full min-h-screen flex items-center justify-center p-4 sm:p-6">
      <div class="bg-white/80 backdrop-blur-sm p-6 sm:p-8 rounded-2xl shadow-xl w-full max-w-md border border-white/20 mx-auto my-auto animate-slideIn">
        <div class="text-center mb-6 sm:mb-8">
          <h1 class="text-4xl sm:text-5xl font-bold bg-gradient-to-r from-purple-600 to-indigo-600 bg-clip-text text-transparent">TellMe</h1>
          <p class="text-gray-600 mt-2 sm:mt-3 font-medium">Bienvenido de vuelta</p>
        </div>

        <!-- Aviso de aplicación de prueba -->
        <div class="mb-4 p-3 bg-yellow-50 border border-yellow-200 rounded-lg">
          <p class="text-yellow-700 text-sm">
            <span class="font-semibold">⚠️ Esta es una aplicación de prueba.</span> Se recomienda no utilizar contraseñas ni correos electrónicos que uses habitualmente en otros servicios.
          </p>
        </div>
        
        <!-- Login Form -->
        <form id="loginForm" class="space-y-4 sm:space-y-5">
          <div>
            <input
              type="email"
              id="email"
              placeholder="Correo electrónico"
              class="w-full px-3 sm:px-4 py-2.5 sm:py-3 border-2 border-purple-100 rounded-xl focus:outline-none focus:border-purple-400 text-sm sm:text-base bg-white/50 placeholder-gray-400 transition-colors"
              required
            />
          </div>
          <div>
            <input
              type="password"
              id="password"
              placeholder="Contraseña"
              class="w-full px-3 sm:px-4 py-2.5 sm:py-3 border-2 border-purple-100 rounded-xl focus:outline-none focus:border-purple-400 text-sm sm:text-base bg-white/50 placeholder-gray-400 transition-colors"
              required
            />
          </div>
          <div id="errorMessage" class="text-red-500 text-sm hidden"></div>
          <button
            type="submit"
            class="w-full bg-gradient-to-r from-purple-600 to-indigo-600 text-white py-2.5 sm:py-3 rounded-xl hover:opacity-90 transition duration-200 font-semibold text-sm sm:text-base shadow-lg shadow-purple-500/30"
          >
            Iniciar sesión
          </button>
        </form>

        <div class="mt-4 text-center">
          <a href="#" class="text-purple-600 hover:text-purple-700 font-medium text-sm sm:text-base">¿Olvidaste tu contraseña?</a>
        </div>

        <div class="relative my-6 sm:my-8">
          <div class="absolute inset-0 flex items-center">
            <div class="w-full border-t border-gray-300"></div>
          </div>
          <div class="relative flex justify-center text-sm">
            <span class="px-2 bg-white/80 text-gray-500">O</span>
          </div>
        </div>

        <!-- Register Button -->
        <a
          href="/register"
          class="block w-full bg-white border-2 border-purple-200 text-purple-700 text-center py-2.5 sm:py-3 rounded-xl hover:border-purple-300 hover:bg-purple-50 transition duration-200 font-semibold text-sm sm:text-base"
        >
          Crear una cuenta nueva
        </a>
      </div>
    </div>
  </main>
</Layout>

<style>
  /* Mejoras de accesibilidad */
  @media (prefers-reduced-motion: reduce) {
    * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }
  }

  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-slideIn {
    animation: slideIn 0.5s ease-out forwards;
  }
</style>

<script>
  // @ts-ignore
  import { auth } from '../utils/api.js';

  // Lógica del cliente para manejar el formulario y el registro
  document.getElementById('loginForm')?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const form = e.target as HTMLFormElement;
    const emailInput = document.getElementById('email') as HTMLInputElement;
    const passwordInput = document.getElementById('password') as HTMLInputElement;
    const errorMessage = document.getElementById('errorMessage');
    
    const email = emailInput?.value;
    const password = passwordInput?.value;
    
    try {
      // Mostrar indicador de carga
      const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;
      if (submitButton) {
        const originalText = submitButton.textContent;
        submitButton.textContent = 'Iniciando sesión...';
        submitButton.disabled = true;
      }
      
      // Llamar a la API de login
      const data = await auth.login({ email, password });
      
      // Redirigir al feed
      window.location.href = '/feed';
    } catch (error) {
      // Mostrar mensaje de error
      if (errorMessage) {
        errorMessage.textContent = error instanceof Error ? error.message : 'Error al iniciar sesión';
        errorMessage.classList.remove('hidden');
      }
      
      // Restaurar el botón
      const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;
      if (submitButton) {
        submitButton.textContent = 'Iniciar sesión';
        submitButton.disabled = false;
      }
    }
  });
</script>
